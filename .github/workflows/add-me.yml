# create a github workflow that will run upon a new issue being lableled with "add-me"
# the workflow should add the creator of the issue as a member of the organization

name: Add me to the organization

on:
  issues:
    types: 
      - labeled
      - edited

jobs:
  add-me:
    runs-on: ubuntu-latest
    steps:
      # if the issue is not labeled with "add-me" then mark the workflow as successful and exit

      - name: Skip if not labeled
        if: ${{ !contains(github.event.issue.labels.*.name, 'add-me') }}
        run: |
          echo "Issue is not labeled with 'add-me', skipping"
          exit 0

      # check if the user is already a member of the organization
      # if they are, then mark the workflow as successful and exit

      - name: Check if user is already a member
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ONEGHEORG_ADMIN_TOKEN }}
          script: |
            try{
              // get the user ID for the user who created the issue
              const user = await github.rest.users.getByUsername({
                username: context.payload.issue.user.login
              })

              core.info(JSON.stringify(user, null, 2))
              const membership = await github.rest.orgs.getMembershipForUser({
                org: context.repo.owner,
                username: user.data.id
              })

              if (membership.status === 200) {
                console.log('User is already a member of the organization')
                core.setFailed('User is already a member of the organization')
              }
            } catch (error) {
              if (error.status === 404) {
                console.log('User is not a member of the organization')
              } else {
                throw error
              }
            }

      - name: Add me to the organization
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ONEGHEORG_ADMIN_TOKEN }}
          script: |
            github.rest.orgs.createInvitation({
              org: context.repo.owner,
              invitee_id: context.payload.issue.user.login,
              role: 'direct_member'
            })
      
